stages:
    - services
    - build
    - test
    - deploy

# NGINX PROXY

start_nginx:
    stage: services
    script:
        - docker-compose -f docker-compose.production.yml up -d proxy
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    

reload_nginx:
    stage: services
    script:
        - docker restart odk-proxy
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - ./nginx/nginx.conf

# POSTGRES DATABASE

start_database:
    stage: services
    script:
        - docker-compose -f docker-compose.production.yml up -d db
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    
# RABBITMQ MESSAGE BROKER

start_rabbitmq:
    stage: services
    script:
        - docker-compose -f docker-compose.production.yml up -d rmq
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
    
# FASTAPI SERVER

build_server:
    stage: build
    script:
        - docker-compose -f docker-compose.production.yml stop api
        - docker-compose -f docker-compose.production.yml build api
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - docker-compose.production.yml
            - odk-api/**/*

# integration_test_server:
#     stage: test
#     script:
#         - docker-compose -f docker-compose.ci.yml run --rm fastapi-server bash run_db_connection_test.sh
#     rules:
#         - if: '$CI_COMMIT_BRANCH == "master"'
#           changes:
#             - docker-compose.ci.yml
#             - odk-api/**/*


deploy_server:
    stage: deploy
    script:
        - docker-compose -f docker-compose.production.yml up -d --no-deps api
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - docker-compose.production.yml
            - odk-api/**/*

# VUEJS PWA

build_app:
    stage: build
    script:
        - docker-compose -f docker-compose.production.yml stop app
        - docker-compose -f docker-compose.production.yml build app
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - docker-compose.production.yml
            - odk-app/**/*

test_app:
    stage: test
    script:
        - echo "NOT YET IMPLEMENTED"
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - docker-compose.production.yml
            - odk-app/**/*


deploy_app:
    stage: deploy
    script:
        - docker-compose -f docker-compose.production.yml up -d --no-deps app
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
          changes:
            - docker-compose.production.yml
            - odk-app/**/*
