version: '3.5'

services:
  app:
    container_name: odk-app
    build:
      context: ./odk-app
      args:
        - APP_NAME=ODK stage
        - API_HTTP=https://api.odk-stage.cto-tech.amsterdam
        - API_WS=wss://api.odk-stage.cto-tech.amsterdam
    ports:
      - "8090:80"
    networks:
      reversed-proxy:
        ipv4_address: 192.168.100.10

  api:
    container_name: odk-api
    build: ./odk-api
    environment:
      - DATABASE_URL=postgresql://odk:staging@db/odk
      - BROKER_URL=amqp://odk:staging@rmq
      - SECRET_KEY=g2Izp39wTTdAlbBkfNppLSNQR9yKwtfOsT29tfJMgWs
      - ADMIN_EMAIL=admin@staging.com
    env_file:
      - ./odk-api/.global.env
      - ./odk-api/.staging.env
    ports:
      - "8000:80"
    networks:
      stack-internal:
      reversed-proxy:
        ipv4_address: 192.168.100.20

  db:
    container_name: odk-db
    image: mdillon/postgis:10-alpine
    environment:
      - PGDATA=/pgdata
      - POSTGRES_USER=odk
      - POSTGRES_PASSWORD=staging
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      stack-internal:

  rmq:
    container_name: odk-rmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=odk
      - RABBITMQ_DEFAULT_PASS=staging
    ports:
       - "8091:8080"
       - "3389:5672"
       - "15672:15672"
    networks:
      stack-internal:

volumes:
  postgres-data:

networks:
  stack-internal:
    internal: true
  reversed-proxy:
    external: true
    name: reversed-proxy-network