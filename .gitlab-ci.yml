stages:
    - build
    - pre-deploy
    - deploy

# POSTGRES DATABASE

start-database:
    stage: pre-deploy
    script:
        - docker-compose -f docker-compose.ci.yml up -d postgres-db

# RABBITMQ MESSAGE BROKER

start-rabbitmq:
    stage: pre-deploy
    script:
        - docker-compose -f docker-compose.ci.yml up -d rabbitmq

# FASTAPI SERVER

build-server:
    stage: build
    script:
        - docker-compose -f docker-compose.ci.yml stop fastapi-server
        - docker-compose -f docker-compose.ci.yml build fastapi-server
    only:
        changes:
            - docker-compose.ci.yml
            - odk-api/**/*

deploy-server:
    stage: deploy
    script:
        - docker-compose -f docker-compose.ci.yml up -d fastapi-server
    only:
        changes:
            - docker-compose.ci.yml
            - odk-api/**/*

# VUE PWA

# build-app:
#     stage: build
#     script:
#         - docker-compose stop vue-pwa
#         - docker-compose build vue-pwa
#     only:
#         changes:
#             - docker-compose.yml
#             - pwa/**/*

# deploy-app:
#     stage: deploy
#     script:
#         - docker-compose up -d vue-pwa
#     only:
#         changes:
#             - docker-compose.yml
#             - pwa/**/*