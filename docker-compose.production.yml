version: "3.5"

services:
  app:
    container_name: odk-app
    build:
      context: ./odk-app
      args:
        - APP_NAME=ODK
        - MODE=production
    expose:
      - "80"
    networks:
      reversed-proxy:
        ipv4_address: 192.168.100.10

  api:
    container_name: odk-api
    build: ./odk-api
    environment:
      - DATABASE_URL
      - BROKER_URL
      - SECRET_KEY
      - ADMIN_EMAIL
    env_file:
      - ./odk-api/.global.env
      - ./odk-api/.production.env
    expose:
      - "80"
    networks:
      stack-internal:
      reversed-proxy:
        ipv4_address: 192.168.100.20

  db:
    container_name: odk-db
    image: mdillon/postgis:10-alpine
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata-docker:/var/lib/postgresql/data
      # - postgis-data:/var/lib/postgresql/data
    networks:
      - stack-internal

  rmq:
    container_name: odk-rmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    ports:
      - "3389:5672"
      - "15672:15672"
    networks:
      - stack-internal

volumes:
  postgis-data:

networks:
  stack-internal:
    internal: true
  reversed-proxy:
    external: true
    name: reversed-proxy-network
